plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.ld5ehom'
version = '0.0.1-SNAPSHOT'
description = 'rest-api'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.data:spring-data-rest-hal-explorer'

    // DB / Lombok
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Test & REST Docs
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Swagger / OpenAPI (Boot 3.5.x 호환 버전)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'

    // REST Docs Asciidoctor
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.register("restDocsTest", Test) {
    outputs.dir snippetsDir
    useJUnitPlatform { includeTags("restDocs") }
    finalizedBy "asciidoctor"
}

tasks.named("asciidoctor") {
    dependsOn restDocsTest
    inputs.dir snippetsDir
    configurations "asciidoctorExt"
    baseDirFollowsSourceDir()
}

tasks.register('copyAsciidocHTML', Copy) {
    dependsOn asciidoctor
    from "${asciidoctor.outputDir}"
    into "${project.rootDir}/src/main/resources/static/docs"
}
